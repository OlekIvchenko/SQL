-- 1. Всіх діючих співробітників розбийте на сегменти залежно від віку в момент прийому на роботу: до 25, 25-44, 45-54, 55 і старше, для кожного сегменту виведіть максимальну зарплату. В результаті потрібно отримати два поля сегмент, максимальну зарплату в сегменті.
SELECT 
    CASE 
        WHEN TIMESTAMPDIFF(YEAR, birth_date, hire_date) < 25 THEN '< 25 years'
        WHEN TIMESTAMPDIFF(YEAR, birth_date, hire_date) BETWEEN 25 AND 44 THEN '25-44 years'
        WHEN TIMESTAMPDIFF(YEAR, birth_date, hire_date) BETWEEN 45 AND 54 THEN '45-54 years'
        WHEN TIMESTAMPDIFF(YEAR, birth_date, hire_date) >= 55 THEN '55+ years'
    END AS Hiring_Age,
    MAX(salary) AS Max_Salary_By_Segment
FROM 
    employees.employees
    INNER JOIN employees.salaries ON employees.emp_no = salaries.emp_no
WHERE 
    salaries.to_date = '9999-01-01'
GROUP BY 
    Hiring_Age
ORDER BY 
    CASE 
        WHEN Hiring_Age = '< 25 years' THEN 1
        WHEN Hiring_Age = '25-44 years' THEN 2
        WHEN Hiring_Age = '45-54 years' THEN 3
        WHEN Hiring_Age = '55+ years' THEN 4
    END;
    
-- 2. Покажіть посаду та зарплату працівника з найвищою зарплатою більше не працюючого в компанії.
WITH DontWork AS (
    SELECT 
        t.emp_no,
        t.title,
        MAX(t.to_date) AS max_to_date
    FROM 
        employees.titles AS t
    WHERE 
        t.to_date < CURRENT_DATE()
    GROUP BY 
        t.emp_no, t.title
),
MaxSalary AS (
    SELECT 
        s.emp_no,
        MAX(s.salary) AS salary
    FROM 
        salaries s
        JOIN DontWork lj ON s.emp_no = lj.emp_no
    WHERE 
        s.to_date = lj.max_to_date
    GROUP BY 
        s.emp_no
)

SELECT 
    lj.title,
    ms.salary
FROM 
    DontWork lj
    JOIN MaxSalary ms ON lj.emp_no = ms.emp_no
ORDER BY 
    ms.salary DESC
LIMIT 1;

-- 3. Покажіть ТОР-10 діючих співробітників з найбільшою зарплатою
SELECT 
    e.emp_no AS emp_no,
    CONCAT(e.first_name, ' ', e.last_name) AS full_name,
    s.salary AS salary
FROM 
    employees.employees AS e
    INNER JOIN employees.salaries AS s ON e.emp_no = s.emp_no
WHERE 
    s.to_date = '9999-01-01'
ORDER BY 
    s.salary DESC
LIMIT 10;

-- 4. Покажіть діючих співробітників зарплата яких вища ніж середня зарплата по діючим співробітникам.
SELECT 
    e.emp_no, 
    CONCAT(e.first_name, ' ', e.last_name) AS full_name, 
    s.salary
FROM 
    employees.employees AS e
JOIN 
    salaries s ON e.emp_no = s.emp_no
WHERE 
    s.to_date = '9999-01-01'
    AND s.salary > (
        SELECT AVG(salary) 
        FROM salaries
        WHERE to_date = '9999-01-01'
    );

-- 5. Покажіть співробітників, які працюють у відділах де працює більш ніж 20000 співробітників.
SELECT DISTINCT e.emp_no, 
       CONCAT(e.first_name, ' ', e.last_name) AS full_name, 
       d.dept_name
FROM employees.employees AS e
INNER JOIN employees.dept_emp AS de ON e.emp_no = de.emp_no
INNER JOIN employees.departments AS d ON de.dept_no = d.dept_no
INNER JOIN (
    SELECT dept_no
    FROM employees.dept_emp
    WHERE CURDATE() BETWEEN from_date AND to_date
    GROUP BY dept_no
    HAVING COUNT(*) > 20000
) large_depts ON de.dept_no = large_depts.dept_no
WHERE CURDATE() BETWEEN de.from_date AND de.to_date
ORDER BY e.emp_no;

-- 6. Покажіть співробітників, які заробляють більше, ніж будь-який інший працівник відділу Finance
SELECT s.emp_no, s.salary
FROM employees.salaries AS s
WHERE s.to_date = '9999-01-01'
  AND s.salary > (
    SELECT MAX(s2.salary)
    FROM employees.salaries AS s2
    JOIN employees.dept_emp AS de ON s2.emp_no = de.emp_no
    JOIN employees.departments AS d ON de.dept_no = d.dept_no
    WHERE s2.to_date = '9999-01-01'
      AND de.to_date = '9999-01-01'
      AND d.dept_name = 'Finance'
  )
ORDER BY s.emp_no;

-- 7. Покажіть назви відділів, де колись працював хоча б один співробітник з зарплатою більше $150K
SELECT DISTINCT d.dept_name
FROM employees.departments AS d
JOIN employees.dept_emp AS de ON d.dept_no = de.dept_no
JOIN employees.salaries AS s ON de.emp_no = s.emp_no
WHERE s.salary > 150000;
