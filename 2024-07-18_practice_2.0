/* 
	Lesson - 2. Aggregation function. 
	Date: 2024-07-18 
	Topic: 
		1. Type of date
        2. Order by - Add info about type
        3. Aggregation func
        5. Having 
        6. Round, Ceil, Floor
*/

USE employees;	

SHOW TABLES;

# 1:Upper +  else:lower , A__b_

SELECT * FROM
 salaries;

SHOW  COLUMNS  FROM  employees.salaries; # показывает типы данных в таблице по колонкам


# SELECT md5('');


/* Aggregation func

	max() - find max in column. Example: 		SELECT MAX(salary) FROM employees.salaries;
	min()  - find min in column. Example: 			SELECT MIN(salary) FROM employees.salaries;
    avg()  - find mean in column. Example:  		SELECT AVG(salary) FROM employees.salaries;
    count() - calculate all in column. Example: 	SELECT COUNT(*) FROM employees.salaries;
    sum() - calculate sum. Example: 				SELECT SUM(salary) FROM employees.salaries;
    
 */
SELECT MIN(salary)
 FROM employees.salaries;
 
 SELECT *
 FROM salaries
 ORDER BY salary 
 LIMIT 1;
 
 SELECT MAX(salary), MIN(salary)
 FROM salaries;
 
 SELECT SUM(salary) 
 FROM employees.salaries;
 
  SELECT MIN(first_name) , COUNT(first_name)
 FROM employees
 WHERE YEAR(hire_date) = 2000 ;
 
 SELECT AVG(salary) , MIN(salary)
 FROM employees.salaries
 INNER JOIN employees AS ee USING(emp_no)
 WHERE ee.gender = 'F';
 
 
--  Task 1.Покажіть мінімальну і максимальну дату прийому на роботу
SELECT 
	MIN(hire_date) as min_emp_no_hire
    , MAX(hire_date) as max_emp_no_hire
FROM 
	employees.employees;
 
--  Task 2.Покажіть середню зарплату по всім зарплатним контрактам
SELECT AVG(salary)
FROM employees.salaries;


 # Task 1. Avg - реалізувати avg без avg salary
SELECT SUM(salary) / COUNT(salary)
FROM employees.salaries;

 
SELECT SUM(salary) / COUNT(emp_no)
FROM employees.salaries;


SELECT *
FROM 
employees
WHERE gender = 'M';
 
 SELECT COUNT(*) AS "☀️"
 FROM 
 employees
 WHERE gender = 'M';
 
 
 SELECT COUNT(*)
 FROM employees 
 WHERE gender = 'F'; # 120051
 
 
 SELECT COUNT(*)
 FROM employees 
 WHERE gender = 'M'; # 179973
 

 
 SELECT  gender, hire_date, COUNT(gender)
 FROM employees
 GROUP BY gender,  hire_date; # M - 1, 2, 3, 4, 5, 
 
 
 SELECT 
 *
 FROM 
 salaries;

 
SELECT 
 emp_no, COUNT(salary), AVG(salary),  MIN(salary),
 MAX(salary), SUM(salary)
 FROM 
 salaries
 GROUP BY emp_no;
 
 
 SELECT 
 first_name, last_name, COUNT(emp_no)
 FROM 
employees
GROUP BY first_name, last_name;
 
 
 SELECT 
 emp_no , AVG(salary)
 FROM 
 salaries
 WHERE emp_no BETWEEN 10100 AND 10110  
 GROUP BY emp_no;
 
 
 SELECT * FROM 
 employees;


SELECT AVG(salary), ROUND(AVG(salary),  1)
FROM salaries;


# Відобразити Найменьше/Найбільше день на родження (серед M,F)
 
 SELECT 
	gender
    ,MAX(birth_date)
	, MIN(birth_date)
 FROM employees
 WHERE gender = 'F';
 

 SELECT MAX(birth_date), MIN(birth_date)
 FROM employees 
 WHERE gender = 'M';
 
 
 SELECT 
    gender
    , MIN(birth_date)
    , MAX(birth_date)
FROM
    employees
GROUP BY gender;
 
SELECT  MIN(emp_no), MAX(emp_no)
FROM employees ;



 SELECT first_name, COUNT(emp_no), gender 
 FROM employees
 WHERE gender = 'M' AND first_name LIKE  'X%'
 GROUP BY first_name;
 
 
 SELECT first_name, last_name, emp_no 
 FROM employees
 WHERE gender = 'M' AND last_name LIKE 'X%';
 
 
 SELECT * 
 FROM employees;
 
 
SELECT first_name, last_name, COUNT(emp_no) # 4
FROM employees # 1
WHERE first_name = 'Georgi' AND last_name = 'Facello' # 2
GROUP BY first_name, last_name
HAVING 1 + 1; # 3
 
 
 SELECT emp_no, first_name, last_name
 FROM employees
 WHERE first_name = 'Georgi' AND last_name = 'Facello';
 
 
SELECT first_name, last_name, COUNT(emp_no)
FROM employees
GROUP BY first_name, last_name;
 
 
SELECT first_name, last_name, COUNT(emp_no) as cemp # 4 
FROM employees # 1 
-- where  # 2 
GROUP BY first_name, last_name # 3 
HAVING COUNT(emp_no) = 2 ; # 5
 
 SELECT first_name, last_name, COUNT(emp_no) 
FROM employees
GROUP BY first_name, last_name
HAVING COUNT(emp_no) > 1
ORDER BY COUNT(emp_no) DESC
LIMIT 5;
 
 SELECT SUM(salary), COUNT(salary)
 FROM salaries;
 

 
  SELECT SUM(salary) / COUNT(salary), AVG(salary)
 FROM salaries;
 

 
 SELECT emp_no, SUM(salary), COUNT(salary)
 FROM salaries
 GROUP BY emp_no
 HAVING COUNT(salary) ;
 
/*
	Slide 8
	Task 1: Select all employees whose average salary is higher than $120,000 per  annum.
    
    Task 1: Виберіть усіх працівників, чия середня зарплата перевищує 120 000 доларів США.
*/
# Крок 1:  Вивезти таблицю
SELECT * FROM
 salaries;

# Крок 2: AVG 
SELECT AVG(salary)
 FROM salaries;
 
 SELECT emp_no, AVG(salary)
 FROM salaries
 GROUP BY emp_no;


# Крок 3: Having 
SELECT 
	emp_no
    , AVG(salary)  AS sal
    , 'hello'
FROM salaries
GROUP BY emp_no
HAVING sal >= 120000;

/*
	Slide 11
    Task 1: Select the employee numbers of all individuals who have signed  more than 
    1 contract after the 1st of January 2000.
    Hint: To solve this exercise, use the “dept_emp” table
    
    Task 1: Виберіть кількість працівників, які підписали більше ніж 1 робочий контракт після 1 січня 2000 року.
*/
SELECT * FROM 
dept_emp;


SELECT *
FROM
dept_emp
WHERE from_date LIKE '2__0%';

# Крок 1. Від 2001
SELECT *
FROM dept_emp
WHERE from_date > '2000-01-01';

# Крок 2. Group by emp_no
SELECT emp_no
FROM dept_emp
WHERE from_date > '2000-01-01'
GROUP BY emp_no;

# Крок 3. COUNT + having
SELECT emp_no, COUNT(emp_no) as cemp
FROM dept_emp
WHERE from_date > '2000-01-01'
GROUP BY emp_no
HAVING cemp > 1;


SELECT *
FROM dept_emp
WHERE emp_no = 11609;

SELECT 
emp_no, count(from_date)
FROM dept_emp
WHERE from_date > '2000-01-01'
GROUP BY emp_no
HAVING COUNT( from_date) > 1;



# Use concat - склейка строк, + 
SELECT emp_no, CONCAT(first_name , " " , last_name , '135' ) AS Full_name
FROM 
employees;

SELECT * FROM salaries ;

/*
	Slide 12
    Task 1: What is the total amount of money spent on salaries for all contracts starting after the  1st of January 1997?
    
	Task 1:  Покажіть середню зарплату працівниів, які почали роботу після 1 січня 1997 року?
*/
SELECT * FROM salaries;

SELECT * FROM salaries
WHERE from_date > '1997-01-01';


SELECT SUM(salary)
FROM salaries
WHERE from_date > '1997-01-01';

SELECT 
	emp_no
	, AVG(salary)
FROM 
	employees.salaries
WHERE 
	from_date > '1997-01-01'
GROUP BY
	emp_no;


SELECT 
	emp_no
    , ROUND(AVG(salary),  2) AS avg_salary
FROM 
	employees.salaries 
GROUP BY 
	emp_no
HAVING MIN(from_date) > '1997-01-01';

/*
	Slide 13
    Task 1: Which is the lowest employee number in the database?
	Task 2: Which is the highest employee number in the database?
*/
SELECT MIN(emp_no) 
FROM employees;

SELECT MAX(emp_no) 
FROM employees;


SELECT MAX(emp_no)
FROM employees.employees AS ee;


 SELECT emp_no, (SELECT MAX(emp_no) FROM employees LIMIT 1)
FROM employees AS ee
ORDER BY emp_no 
LIMIT 1;

SELECT MIN(emp_no)  min_value , MAX(emp_no) AS "☀️"
 FROM employees;
 


/*
	Slide 15
	Task 1: Show average annual salaries that are above 100k USD paid to  employees
    who started after the 1st of January 1997?
    
*/

SELECT *
 FROM salaries;
 
 
 SELECT *
 FROM salaries
 WHERE from_date >=  '1997-01-01';


SELECT emp_no 
FROM salaries 
GROUP BY emp_no;


/*
'10066', '100512.8333'
'10068', '110374.2000'
'10136', '104907.3333'
'10151', '106037.2000'
'10173', '104170.3333'
'10232', '102270.8333'
*/
SELECT 
    emp_no, AVG(salary) as avg_salary
FROM
    salaries
WHERE
    from_date > '1997-01-01'
GROUP BY emp_no
HAVING AVG(salary) > 100000;



/*
	Slide 17
    Task 1: Round the average amount of money spent on salaries for
    all contracts  that started after the 1st of January 1997 to a precision of cents.
    
    Task 1:  Округліть середню суму грошей, витрачену на зарплату для всіх контрактів, які розпочалися після 1 січня 1997 року, з точністю до центів.
*/
SELECT *
FROM salaries;


SELECT 
emp_no, ROUND(AVG(salary), 2) AS 'Round', COUNT(salary) AS 'Count'
FROM 
salaries
WHERE from_date > '1997-01-01'
GROUP BY emp_no;


# Round/Ceil/Floor - округлення для float
# Round - округляю до знаку який вкажемо, Ceil - округлення до більшого, Floor - округлення до меншого 
SELECT ROUND(5.1356, 2), CEIL(5.1356), FLOOR(5.9);

SELECT ROUND(3.14159, 2);

SELECT ROUND(AVG(salary), 3), CEIL(AVG(salary)), FLOOR(AVG(salary))
FROM salaries;

SELECT  CEIL(3.14159);

SELECT FLOOR(3.14159);


/*
	Вивести всіх співробітників в кого рік народження між 1955 і 1970
    Наступний пункт sorted birth_date або emp_ no 
*/

# First var
SELECT *
FROM employees 
WHERE birth_date BETWEEN '1955-01-01' AND '1970-12-31'
ORDER BY birth_date DESC;


# Second var
SELECT * 
FROM employees
WHERE birth_date >= '1955-01-01' AND birth_date <= '1970-12-31';


/*
	Вивести всіх співробітників кто отримав зп в  2002
    Наступний пункт sorted 
*/
SELECT *
FROM salaries
WHERE from_date <= '2003-01-01' AND to_date >= '2002-01-01';
